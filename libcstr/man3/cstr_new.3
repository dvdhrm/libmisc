.\"
.\" Written 2011 by David Herrmann
.\" Dedicated to the Public Domain
.\"
.TH "cstr_new, cstr_cnew, cstr_new0, cstr_cnew0" 3 "August 2011" "David Herrmann" "CSTR Library"
.SH NAME
cstr_new, cstr_cnew, cstr_new0, cstr_cnew0 \- Allocate new cstr object

.SH SYNOPSIS
.B #include <libcstr.h>

.BI "cstr *cstr_new(size_t " len ");"
.br
.BI "cstr *cstr_cnew(size_t " len ");"
.br
.BI "cstr *cstr_new0(size_t " len ");"
.br
.BI "cstr *cstr_cnew0(size_t "len ");"

.SH DESCRIPTION
.B cstr_new
allocates a new cstr object with string length
.I len.
The actual size of the object will be twice the requested length to have a
buffer for string modifications. For constant strings no such buffer is
allocated and the size will be equal to the requested length.

.B cstr_new0
works like
.B cstr_new
but initializes the new string buffer to 0.

.B cstr_cnew
and
.B cstr_cnew0
allocate new constant strings.

.SH AUTHOR
David Herrmann <dh.herrmann@googlemail.com>
.SH "SEE ALSO"
.BR cstr (3),
.BR cstr_alloc (3),
.BR cstr_free (3),
.BR cstr_fit (3),
.BR cstr_dup (3),
.BR cstr_cat (3),
.BR CSTR_LEN (3),
.BR CSTR_VOID (3)
