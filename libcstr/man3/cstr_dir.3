.\"
.\" Written 2011 by David Herrmann
.\" Dedicated to the Public Domain
.\"
.TH "cstr_dir, cstr_cdir" 3 "August 2011" "David Herrmann" "CSTR Library"
.SH NAME
cstr_dir, cstr_cdir \- Extract directory name from cstr object

.SH SYNOPSIS
.B #include <libcstr.h>

.BI "cstr *cstr_dir(const cstr *" str ");"
.br
.BI "cstr *cstr_cdir(const cstr *" str ");"

.SH DESCRIPTION
This extracts the directory name from a string. The string is interpreted as a
UNIX path. Directories are delimited by '/' characters. The result does not
contain a trailing '/' character, except if it is the root directory.

The returned object is a new copy so if the memory allocation fails, NULL is
returned.
.B cstr_cdir
works the same way but produces constant strings.

Examples:
.br
	"this/is/relative"	=> "this/is"
.br
	"somefile"		=> ""
.br
	"/this/is/absolute"	=> "/this/is"
.br
	"/"				=> "/"
.br
	"/somefile"		=> "/"

.SH AUTHOR
David Herrmann <dh.herrmann@googlemail.com>
.SH "SEE ALSO"
.BR cstr (3),
.BR cstr_alloc (3),
.BR cstr_free (3),
.BR cstr_fit (3),
.BR cstr_new (3),
.BR cstr_dup (3),
.BR cstr_cat (3),
.BR CSTR_LEN (3),
.BR CSTR_VOID (3)
